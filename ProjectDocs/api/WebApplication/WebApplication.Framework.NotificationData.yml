### YamlMime:ManagedReference
items:
- uid: WebApplication.Framework.NotificationData
  commentId: T:WebApplication.Framework.NotificationData
  id: NotificationData
  parent: WebApplication.Framework
  children:
  - WebApplication.Framework.NotificationData.Body
  - WebApplication.Framework.NotificationData.Dismissable
  - WebApplication.Framework.NotificationData.Level
  - WebApplication.Framework.NotificationData.Title
  langs:
  - csharp
  - vb
  name: NotificationData
  nameWithType: NotificationData
  fullName: WebApplication.Framework.NotificationData
  type: Class
  source:
    remote:
      path: WebApplication/Framework/NotificationData.cs
      branch: master
      repo: git@github.com:cs-ehu/HADSProject-Fork.git
    id: NotificationData
    path: ../WebApplication/Framework/NotificationData.cs
    startLine: 5
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public class NotificationData
    content.vb: Public Class NotificationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: WebApplication.Framework.NotificationData.Title
  commentId: P:WebApplication.Framework.NotificationData.Title
  id: Title
  parent: WebApplication.Framework.NotificationData
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: NotificationData.Title
  fullName: WebApplication.Framework.NotificationData.Title
  type: Property
  source:
    remote:
      path: WebApplication/Framework/NotificationData.cs
      branch: master
      repo: git@github.com:cs-ehu/HADSProject-Fork.git
    id: Title
    path: ../WebApplication/Framework/NotificationData.cs
    startLine: 7
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: WebApplication.Framework.NotificationData.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WebApplication.Framework.NotificationData.Body
  commentId: P:WebApplication.Framework.NotificationData.Body
  id: Body
  parent: WebApplication.Framework.NotificationData
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: NotificationData.Body
  fullName: WebApplication.Framework.NotificationData.Body
  type: Property
  source:
    remote:
      path: WebApplication/Framework/NotificationData.cs
      branch: master
      repo: git@github.com:cs-ehu/HADSProject-Fork.git
    id: Body
    path: ../WebApplication/Framework/NotificationData.cs
    startLine: 8
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public string Body { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Body As String
  overload: WebApplication.Framework.NotificationData.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WebApplication.Framework.NotificationData.Level
  commentId: P:WebApplication.Framework.NotificationData.Level
  id: Level
  parent: WebApplication.Framework.NotificationData
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: NotificationData.Level
  fullName: WebApplication.Framework.NotificationData.Level
  type: Property
  source:
    remote:
      path: WebApplication/Framework/NotificationData.cs
      branch: master
      repo: git@github.com:cs-ehu/HADSProject-Fork.git
    id: Level
    path: ../WebApplication/Framework/NotificationData.cs
    startLine: 9
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public AlertLevel Level { get; set; }
    parameters: []
    return:
      type: WebApplication.Framework.AlertLevel
    content.vb: Public Property Level As AlertLevel
  overload: WebApplication.Framework.NotificationData.Level*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: WebApplication.Framework.NotificationData.Dismissable
  commentId: P:WebApplication.Framework.NotificationData.Dismissable
  id: Dismissable
  parent: WebApplication.Framework.NotificationData
  langs:
  - csharp
  - vb
  name: Dismissable
  nameWithType: NotificationData.Dismissable
  fullName: WebApplication.Framework.NotificationData.Dismissable
  type: Property
  source:
    remote:
      path: WebApplication/Framework/NotificationData.cs
      branch: master
      repo: git@github.com:cs-ehu/HADSProject-Fork.git
    id: Dismissable
    path: ../WebApplication/Framework/NotificationData.cs
    startLine: 10
  assemblies:
  - WebApplication
  namespace: WebApplication.Framework
  syntax:
    content: public bool Dismissable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Dismissable As Boolean
  overload: WebApplication.Framework.NotificationData.Dismissable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: WebApplication.Framework
  commentId: N:WebApplication.Framework
  name: WebApplication.Framework
  nameWithType: WebApplication.Framework
  fullName: WebApplication.Framework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WebApplication.Framework.NotificationData.Title*
  commentId: Overload:WebApplication.Framework.NotificationData.Title
  name: Title
  nameWithType: NotificationData.Title
  fullName: WebApplication.Framework.NotificationData.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: WebApplication.Framework.NotificationData.Body*
  commentId: Overload:WebApplication.Framework.NotificationData.Body
  name: Body
  nameWithType: NotificationData.Body
  fullName: WebApplication.Framework.NotificationData.Body
- uid: WebApplication.Framework.NotificationData.Level*
  commentId: Overload:WebApplication.Framework.NotificationData.Level
  name: Level
  nameWithType: NotificationData.Level
  fullName: WebApplication.Framework.NotificationData.Level
- uid: WebApplication.Framework.AlertLevel
  commentId: T:WebApplication.Framework.AlertLevel
  parent: WebApplication.Framework
  name: AlertLevel
  nameWithType: AlertLevel
  fullName: WebApplication.Framework.AlertLevel
- uid: WebApplication.Framework.NotificationData.Dismissable*
  commentId: Overload:WebApplication.Framework.NotificationData.Dismissable
  name: Dismissable
  nameWithType: NotificationData.Dismissable
  fullName: WebApplication.Framework.NotificationData.Dismissable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
